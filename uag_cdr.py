# coding=utf-8


def cdr_29(cdr_text):
	cdr_29_segments = [
		'StreamNo',
		'AspID',
		'AppID(ServiceID)',
		'ProductID',
		'ModuleType',
		'ServiceCapability',
		'ServiceType',
		'API',
		'request_time',
		'response_time',
		'result',
		'errcode',
		'ErrorReason',
		'countryCode',
		'InterfaceType',
		'Interval',
		'InerErrCode',
		'InerErrDesc',
		'ConferenceId',
		'Sponser',
		'OrgSponser',
		'Chairman',
		'OrgChairman',
		'GroupNum',
		'DisplayNumber',
		'ConfType',
		'VideoCap',
		'MaxImageNum',
		'VideoSwitchMode',
		'MaxParticipant',
		'Relay',
		'MaxMediaNum',
		'multipicmode',
		'Version',
		'CallBeginTime',
		'Duration',
		'ConfStatus',
		'ConfReason',
		'Participant',
		'OrgParticipant',
		'ParticipantStatus',
		'SpeakStatus',
		'JoinTime',
		'QuitTime',
		'HandUp',
		'IsChairman',
		'Selected',
		'NetworkType',
		'AsErrCode',
		'AsErrDesc',
		'Token',
		'TokenType',
		'Msisdn'
	]
	cdr_29_segments_description = [
		'话单序列号，每个会议从1递增',
		'SPID',
		'APPID',
		'ProductID（南基为空）',
		'设备名称，可配置',
		'能力填写“Conference”',
		'0：下行（MO） 1：上行（MT）',
		'接口名称',
		'请求时间',
		'响应时间',
		'成功/失败',
		'错误码',
		'错误原因',
		'话单中记录号码的国家码',
		'接口类型，南方基地为“oneapi”',
		'请求与响应的时间间隔（ms）',
		'内部错误码',
		'内部错误描述',
		'会议ID',
		'会议发起者（规整为国家码+裸号）',
		'接口中携带的原始会议发起者',
		'接口中的主席号码（规整为国家码+裸号）',
		'接口中携带的原始主席号码',
		'接口携带的成员数',
		'接口携带的号显（规整为国家码+裸号）',
		'接口中携带的会议类型0：音频 1：视频',
		'接口中携带的VideoCap',
		'接口中携带的MaxImageNum',
		'接口中携带的VideoSwitchMode',
		'接口中携带的MaxParticipant',
		'接口中携带的Relay字段',
		'接口中携带的MaxMediaNum',
		'接口中携带的multipicmode',
		'长轮询接口中所携带的版本号',
		'接口中的CallBeginTime（会议开始时间）',
		'接口中的Duration（会议时长）',
		'接口中的ConfStatus（会议状态）',
		'接口中的ConfReason（会议结束原因）',
		'接口中的第一个成员的号码（规整为国家码+裸号）',
		'接口中的第一个成员的原始号码',
		'接口中的第一个成员的ParticipantStatus',
		'接口中的第一个成员的SpeakStatus',
		'接口中的第一个成员的JoinTime',
		'接口中的第一个成员的QuitTime',
		'接口中的第一个成员的HandUp',
		'IsChairman|Reason',
		'接口中的第一个成员的Selected',
		'接口中的第一个成员的NetworkType',
		'As响应的错误码',
		'As响应的错误描述',
		'接口携带的Token字段',
		'IAM返回的Token类型（Token鉴权时填写）',
		'IAM返回的用户号码（用户级Token鉴权时填写）'
	]
	cdr_29_content = cdr_text.split('|')
	result = []
	for i in range(len(cdr_29_segments)):
		result.append("%s-%s:  %s"%(cdr_29_segments[i], cdr_29_segments_description[i], str(cdr_29_content[i]).replace("\n",'')))
	return result


def cdr_deal(cdr_text, cdr_segments, cdr_segments_description):
	'''通用的话单处理
	传入:单行话单，话单字段名称，话单字段解释
	返回: 话单分析结果，List
	'''
	cdr_content = cdr_text.split('|')
	result = []
	for i in range(len(cdr_content)):
		result.append("%s-%s:  %s"%(cdr_segments[i], cdr_segments_description[i], str(cdr_content[i]).replace("\n",'')))
	return result

def cdr_deal_with_code(cdr_text, code):
	'''
	使用话单号对应不同的描述，输出
	:param cdr_text:
	:param code:
	:return: sring:处理结果
	'''
	if code == 29:
		cdr_segments = [
			'StreamNo',
			'AspID',
			'AppID(ServiceID)',
			'ProductID',
			'ModuleType',
			'ServiceCapability',
			'ServiceType',
			'API',
			'request_time',
			'response_time',
			'result',
			'errcode',
			'ErrorReason',
			'countryCode',
			'InterfaceType',
			'Interval',
			'InerErrCode',
			'InerErrDesc',
			'ConferenceId',
			'Sponser',
			'OrgSponser',
			'Chairman',
			'OrgChairman',
			'GroupNum',
			'DisplayNumber',
			'ConfType',
			'VideoCap',
			'MaxImageNum',
			'VideoSwitchMode',
			'MaxParticipant',
			'Relay',
			'MaxMediaNum',
			'multipicmode',
			'Version',
			'CallBeginTime',
			'Duration',
			'ConfStatus',
			'ConfReason',
			'Participant',
			'OrgParticipant',
			'ParticipantStatus',
			'SpeakStatus',
			'JoinTime',
			'QuitTime',
			'HandUp',
			'IsChairman',
			'Selected',
			'NetworkType',
			'AsErrCode',
			'AsErrDesc',
			'Token',
			'TokenType',
			'Msisdn'
		]
		cdr_segments_description = [
			'话单序列号，每个会议从1递增',
			'SPID',
			'APPID',
			'ProductID（南基为空）',
			'设备名称，可配置',
			'能力填写“Conference”',
			'0：下行（MO） 1：上行（MT）',
			'接口名称',
			'请求时间',
			'响应时间',
			'成功/失败',
			'错误码',
			'错误原因',
			'话单中记录号码的国家码',
			'接口类型，南方基地为“oneapi”',
			'请求与响应的时间间隔（ms）',
			'内部错误码',
			'内部错误描述',
			'会议ID',
			'会议发起者（规整为国家码+裸号）',
			'接口中携带的原始会议发起者',
			'接口中的主席号码（规整为国家码+裸号）',
			'接口中携带的原始主席号码',
			'接口携带的成员数',
			'接口携带的号显（规整为国家码+裸号）',
			'接口中携带的会议类型0：音频 1：视频',
			'接口中携带的VideoCap',
			'接口中携带的MaxImageNum',
			'接口中携带的VideoSwitchMode',
			'接口中携带的MaxParticipant',
			'接口中携带的Relay字段',
			'接口中携带的MaxMediaNum',
			'接口中携带的multipicmode',
			'长轮询接口中所携带的版本号',
			'接口中的CallBeginTime（会议开始时间）',
			'接口中的Duration（会议时长）',
			'接口中的ConfStatus（会议状态）',
			'接口中的ConfReason（会议结束原因）',
			'接口中的第一个成员的号码（规整为国家码+裸号）',
			'接口中的第一个成员的原始号码',
			'接口中的第一个成员的ParticipantStatus',
			'接口中的第一个成员的SpeakStatus',
			'接口中的第一个成员的JoinTime',
			'接口中的第一个成员的QuitTime',
			'接口中的第一个成员的HandUp',
			'IsChairman|Reason',
			'接口中的第一个成员的Selected',
			'接口中的第一个成员的NetworkType',
			'As响应的错误码',
			'As响应的错误描述',
			'接口携带的Token字段',
			'IAM返回的Token类型（Token鉴权时填写）',
			'IAM返回的用户号码（用户级Token鉴权时填写）'
		]
	elif code == 30:
		cdr_segments = [
			'StreanNo',
			'AspID',
			'AppID(ServiceID)',
			'ProductID',
			'ModuleType',
			'ServiceCapability',
			'ServiceType',
			'API',
			'request_time',
			'response_time',
			'result',
			'errcode',
			'ErrorReason',
			'countryCode',
			'InterfaceType',
			'Interval',
			'InerErrCode',
			'InertiaErrDesc',
			'ConferenceId',
			'Sponsor',
			'Chairman',
			'ParticipantNum',
			'DisplayNumber',
			'ConfType',
			'MaxParticipants',
			'CallBeginTime',
			'CallEndTime',
			'ConfDuration',
			'EndReason',
			'Relay',
			'MultiDisplay',
			'VipWhiteList',
			'OCSIdentifier',
			'OcsResult',
			'OcsFa',
			'EnterpriseId',
			'OcsTotalDuration'
		]
		cdr_segments_description = [
			'话单序列号，每个会议从1递增',
			'SPID',
			'APPID',
			'ProductID（南基为空）',
			'设备名称，可配置',
			'能力填写“Conference”',
			'0：下行（MO） 1：上行（MT）',
			'CreateConference',
			'会话开始时间（大数据要求填写）',
			'写话单时间（大数据要求填写）',
			'会议创建成功/失败，会议是否正常结束',
			'错误码',
			'错误原因',
			'Sponser的国家码',
			'接口类型，南方基地为“oneapi”',
			'不填',
			'内部错误码',
			'内部错误描述',
			'会议ID',
			'会议发起者（规整为国家码+裸号）',
			'会议结束时的主席号码，没有填空',
			'历史参会所有成员数',
			'号显',
			'会议类型 音频/视频',
			'会议最大成员数',
			'会议开始时间',
			'会议结束时间',
			'会议时长',
			'会议结束原因',
			'是否单流',
			'UP/CP',
			'创建会议者是否在VIP白名单',
			'本次会议的计费ID',
			'出话单时的最终计费结果',
			'计费号码',
			'企业计费时的企业号码',
			'向OCS累计上报总时长'
		]
	elif code == 35:
		cdr_segments = [
			'StreanNo',
			'AspID',
			'AppID(ServiceID)',
			'ProductID',
			'ModuleType',
			'ServiceCapability',
			'ServiceType',
			'API',
			'request_time',
			'response_time',
			'result',
			'errcode',
			'ErrorReason',
			'countryCode',
			'InterfaceType',
			'Interval',
			'InerErrCode',
			'InerErrDesc',
			'ConferenceId',
			'OCSIdentifier',
			'OcsResult',
			'OcsFa',
			'EnterpriseId',
			'OperateType',
			'StreamNum',
			'RsuTime',
			'UseTime',
			'Chiarman',
			'MaxParticipantNum',
			'ConfType',
			'GsuTime'
		]
		cdr_segments_description = [
			'话单序列号，每个会议从1递增',
			'SPID',
			'APPID',
			'ProductID（南基为空）',
			'设备名称，可配置',
			'能力填写“Conference”',
			'0：下行（MO） 1：上行（MT）',
			'计费接口',
			'向OCS请求的时间/收到AS请求时间',
			'收到OCS响应时间',
			'成员加入会成功/失败',
			'错误码（OCS响应失败填写SVC2003）',
			'错误原因（填写OCS响应码）',
			'计费号码的国家码',
			'接口类型，南方基地为“oneapi”',
			'接口调用时间间隔',
			'内部错误码',
			'内部错误描述',
			'会议ID',
			'本次会议的计费ID',
			'每次与OCS交互的结果码',
			'计费号码',
			'企业计费时的企业号码',
			'申请操作类型6、8、7',
			'申请序列号',
			'申请时长',
			'上报已经使用时长',
			'会议计费主席号',
			'会议最大成员数',
			'会议类型',
			'OCS下发时长'
		]
	elif code == 36:
		cdr_segments = [
			'StreanNo',
			'AspID',
			'AppID(ServiceID)',
			'ProductID',
			'ModuleType',
			'ServiceCapability',
			'ServiceType',
			'API',
			'request_time',
			'response_time',
			'result',
			'errcode',
			'ErrorReason',
			'countryCode',
			'InterfaceType',
			'Interval',
			'InerErrCode',
			'InerDesc',
			'ConferenceId',
			'Participant',
			'DisplayNumber',
			'ConfType',
			'CallBeginTime',
			'CallEndTime',
			'Duration',
			'Reason',
			'IsChairman',
			'NetworkType',
			'Selected'
		]
		cdr_segments_description = [
			'话单序列号，每个会议从1递增',
			'SPID',
			'APPID',
			'ProductID（南基为空）',
			'设备名称，可配置',
			'能力填写“Conference”',
			'0：下行（MO） 1：上行（MT）',
			'接口名称（填空）',
			'成员被邀请的时间（大数据要求不能空）',
			'出话单时间（大数据要求不能空）',
			'成员加入会成功/失败',
			'错误码(成员异常退出填SVC2002)',
			'错误原因（成员异常退出原因）',
			'成员国家码',
			'接口类型，南方基地为“oneapi”',
			'接口调用时长（填空）',
			'内部错误码（填空）',
			'内部错误描述（填空）',
			'会议ID',
			'成员号码（规整为国家码+裸号）',
			'号显（规整为国家码+裸号）',
			'会议类型',
			'加入时间',
			'退出时间',
			'参会时长',
			'退出会场原因',
			'退出会场时是否主席',
			'终端类型（视频会议用）',
			'退出会议时是否选端'
		]
	else:
		return ''
	return cdr_deal(cdr_text,cdr_segments,cdr_segments_description)

